from dotenv import load_dotenv
import os
import re
import itertools
from datetime import datetime
from babel.dates import format_datetime
from functools import wraps
import time

import database.db_scripts as db

########################################################
# –°—Å—ã–ª–∫–∏ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–∏
File_link1 = 'scr/statistics/users_hours_today.png'
File_link2 = 'scr/statistics/users_months.png'
File_link3 = 'scr/statistics/users_years.png'

File_link4 = 'scr/statistics/views_today.png'
File_link5 = 'scr/statistics/views_month.png'
File_link6 = 'scr/statistics/views_year.png'


def get_time():
    now = datetime.now()
    f_date = format_datetime(now, "d MMMM yyyy", locale='ru')
    date = f_date.split(' ')
    day, year = " ".join(date[:2]) + " " + date[2] + " –≥–æ–¥–∞", date[2] + " –≥–æ–¥"
    month = format_datetime(now, "LLLL", locale='ru') + ' ' + year
    return day,month,year

KEYBOARD_CALL = ['',' ','next_page_let_','prev_page_let_','prev_page_','up_let_','next_page_','prevsong_page_','up_let2_',
                 'nextsong_page_','prev_ch_','chord_','next_ch_','dell_song_','w_','z_']


load_dotenv()
GENERAL_ADMIN = int(os.getenv('GENERAL_ADMIN'))
DBNAME, USER, PASSWORD, HOST = os.getenv('DBNAME'), os.getenv('USER'), os.getenv('PASSWORD'),os.getenv('HOST')
MAIN_DIRECTORY = os.getenv('MAIN_SONGS_DIRECTORY')
SENDER_LINK = os.getenv('SENDER_LINK')
SENDER_TITLE = os.getenv('SENDER_TITLE')
REDIRECT_SERVER = os.getenv('REDIRECT_SERVER')
TOKEN = os.getenv('TOKKEN')
donate_url  = os.getenv('DONATE_URL')
TOKEN_SDK = os.getenv('TOKEN_SDK')

admin_ids_str = os.getenv('ADMIN_ID', '')
ADMIN_ID = [int(admin_id.strip()) for admin_id in admin_ids_str.split(',') if admin_id.strip()]
PARTNER_LINK = os.getenv('PARTNER_LINK').replace('\\n', '\n')

MONTH_NAME = ['–Ø–Ω–≤–∞—Ä—å', '–§–µ–≤—Ä–∞–ª—å', '–ú–∞—Ä—Ç', '–ê–ø—Ä–µ–ª—å', '–ú–∞–π',
                     '–ò—é–Ω—å', '–ò—é–ª—å', '–ê–≤–≥—É—Å—Ç', '–°–µ–Ω—Ç—è–±—Ä—å',
                     '–û–∫—Ç—è–±—Ä—å', '–ù–æ—è–±—Ä—å', '–î–µ–∫–∞–±—Ä—å']

MENU_BAR = ['–ê–∫–∫–æ—Ä–¥—ãüéº','–ü–æ–∏—Å–∫ üîç','–ü–µ—Å–Ω–∏ üé∏','–°—Ç–∞—Ç—å–∏üéì','–ò–∑–±—Ä–∞–Ω–Ω–æ–µ ‚≠ê','FAQüìö']

VIEWS_DICT = {3: 'üéì', 2: 'üé∏', 4: 'üîç', 5: 'üîçüé∏', 6: '‚≠ê'}

TYPE = ['','m','7','m7','+','dim','dim7','sus2','sus4','7sus2','7sus4','6','m6','9','m9','maj','maj7','7/6','5','add9']

CHORDS_TYPE = ['A', 'A#', 'Bb', 'B', 'H', 'C', 'C#', 'Db', 'D', 'D#', 'Eb', 'E', 'F', 'F#', 'Gb', 'G', 'G#', 'Ab']

CHORDS_1 = ['A', 'Am', 'A7', 'Am7', 'A+', 'Adim', 'Adim7', 'Asus2', 'Asus4', 'A7sus2', 'A7sus4', 'A6', 'Am6', 'A9',
            'Am9', 'Amaj', 'Amaj7', 'A7/6','A5','Aadd9']

CHORDS_2 = ['A#', 'A#m', 'A#7', 'A#m7', 'A#+', 'A#dim', 'A#dim7', 'A#sus2', 'A#sus4', 'A#7sus2', 'A#7sus4', 'A#6', 'A#m6',
            'A#9', 'A#m9', 'A#maj', 'A#maj7', 'A#7/6','A#5','A#add9']

CHORDS_3 = ['Bb', 'Bbm', 'Bb7', 'Bbm7', 'Bb+', 'Bbdim', 'Bbdim7', 'Bbsus2', 'Bbsus4', 'Bb7sus2', 'Bb7sus4', 'Bb6', 'Bbm6', 'Bb9',
            'Bbm9', 'Bbmaj', 'Bbmaj7', 'Bb7/6','Bb5','Bbadd9']

CHORDS_4 = ['B', 'Bm', 'B7', 'Bm7', 'B+', 'Bdim', 'Bdim7', 'Bsus2', 'Bsus4', 'B7sus2', 'B7sus4', 'B6', 'Bm6', 'B9',
            'Bm9', 'Bmaj', 'Bmaj7', 'B7/6','B5','Badd9']

CHORDS_5 = ['H', 'Hm', 'H7', 'Hm7', 'H+', 'Hdim', 'Hdim7', 'Hsus2', 'Hsus4', 'H7sus2', 'H7sus4', 'H6', 'Hm6', 'H9',
            'Hm9', 'Hmaj', 'Hmaj7', 'H7/6','H5','Hadd9']


CHORDS_6 = ['C', 'Cm', 'C7', 'Cm7', 'C+', 'Cdim', 'Cdim7', 'Csus2', 'Csus4', 'C7sus2', 'C7sus4', 'C6', 'Cm6',
            'C9', 'Cm9', 'Cmaj', 'Cmaj7', 'C7/6','C5','Cadd9']


CHORDS_7 = ['C#', 'C#m', 'C#7', 'C#m7', 'C#+', 'C#dim', 'C#dim7', 'C#sus2', 'C#sus4', 'C#7sus2', 'C#7sus4', 'C#6', 'C#m6',
            'C#9', 'C#m9', 'C#maj', 'C#maj7', 'C#7/6','C#5','C#add9']

CHORDS_8 = ['Db', 'Dbm', 'Db7', 'Dbm7', 'Db+', 'Dbdim', 'Dbdim7', 'Dbsus2', 'Dbsus4', 'Db7sus2', 'Db7sus4', 'Db6', 'Dbm6',
            'Db9', 'Dbm9','Dbmaj', 'Dbmaj7', 'Db7/6','Db5','Dbadd9']

CHORDS_9 = ['D', 'Dm', 'D7', 'Dm7', 'D+', 'Ddim', 'Ddim7', 'Dsus2', 'Dsus4', 'D7sus2', 'D7sus4', 'D6', 'Dm6', 'D9', 'Dm9',
            'Dmaj', 'Dmaj7', 'D7/6','D5','Dadd9']

CHORDS_10 = ['D#', 'D#m', 'D#7', 'D#m7', 'D#+', 'D#dim', 'D#dim7', 'D#sus2', 'D#sus4', 'D#7sus2', 'D#7sus4', 'D#6', 'D#m6',
            'D#9', 'D#m9', 'D#maj', 'D#maj7', 'D#7/6','D#5','D#add9']

CHORDS_11 = ['Eb', 'Ebm', 'Eb7', 'Ebm7', 'Eb+', 'Ebdim', 'Ebdim7', 'Ebsus2', 'Ebsus4', 'Eb7sus2', 'Eb7sus4', 'Eb6', 'Ebm6',
             'Eb9', 'Ebm9','Ebmaj', 'Ebmaj7', 'Eb7/6','Eb5','Ebadd9']

CHORDS_12 = ['E', 'Em', 'E7', 'Em7', 'E+', 'Edim', 'Edim7', 'Esus2', 'Esus4', 'E7sus2', 'E7sus4', 'E6', 'Em6', 'E9', 'Em9',
            'Emaj', 'Emaj7', 'E7/6','E5','Eadd9']

CHORDS_13 = ['F', 'Fm', 'F7', 'Fm7', 'F+', 'Fdim', 'Fdim7', 'Fsus2', 'Fsus4', 'F7sus2', 'F7sus4', 'F6', 'Fm6', 'F9', 'Fm9',
            'Fmaj', 'Fmaj7', 'F7/6','F5','Fadd9']

CHORDS_14 = ['F#', 'F#m', 'F#7', 'F#m7', 'F#+', 'F#dim', 'F#dim7', 'F#sus2', 'F#sus4', 'F#7sus2', 'F#7sus4', 'F#6', 'F#m6',
             'F#9', 'F#m9', 'F#maj', 'F#maj7', 'F#7/6','F#5','F#add9']

CHORDS_15 = ['Gb', 'Gbm', 'Gb7', 'Gbm7', 'Gb+', 'Gbdim', 'Gbdim7', 'Gbsus2', 'Gbsus4', 'Gb7sus2', 'Gb7sus4', 'Gb6', 'Gbm6', 'Gb9', 'Gbm9',
             'Gbmaj', 'Gbmaj7', 'Gb7/6','Gb5','Gbadd9']

CHORDS_16 = ['G', 'Gm', 'G7', 'Gm7', 'G+', 'Gdim', 'Gdim7', 'Gsus2', 'Gsus4', 'G7sus2', 'G7sus4', 'G6', 'Gm6', 'G9', 'Gm9',
             'Gmaj', 'Gmaj7', 'G7/6','G5','Gadd9']

CHORDS_17 = ['G#', 'G#m', 'G#7', 'G#m7', 'G#+', 'G#dim', 'G#dim7', 'G#sus2', 'G#sus4', 'G#7sus2', 'G#7sus4', 'G#6', 'G#m6',
             'G#9', 'G#m9', 'G#maj', 'G#maj7', 'G#7/6','G#5','G#add9']

CHORDS_18 = ['Ab', 'Abm', 'Ab7', 'Abm7', 'Ab+', 'Abdim', 'Abdim7', 'Absus2', 'Absus4', 'Ab7sus2', 'Ab7sus4', 'Ab6', 'Abm6',
             'Ab9','Abm9', 'Abmaj', 'Abmaj7', 'Ab7/6', 'Ab5', 'Abadd9']


CHORDS_TYPE_NAME_LIST = ['CHORDS_1', 'CHORDS_2', 'CHORDS_3', 'CHORDS_4', 'CHORDS_5', 'CHORDS_6', 'CHORDS_7',
                         'CHORDS_8', 'CHORDS_9', 'CHORDS_10', 'CHORDS_11', 'CHORDS_12', 'CHORDS_13','CHORDS_14',
                         'CHORDS_15','CHORDS_16','CHORDS_17','CHORDS_18']

CHORDS_TYPE_LIST = [CHORDS_1, CHORDS_2, CHORDS_3, CHORDS_4, CHORDS_5, CHORDS_6, CHORDS_7,
                    CHORDS_8, CHORDS_9, CHORDS_10, CHORDS_11, CHORDS_12, CHORDS_13,CHORDS_14,CHORDS_15,
                    CHORDS_16,CHORDS_17,CHORDS_18]

LETTERS = ['0-9', '–ê', '–ë', '–í', '–ì', '–î', '–ï', '–Å', '–ñ', '–ó', '–ò', '–ô', '–ö', '–õ', '–ú', '–ù', '–û', '–ü', '–†', '–°', '–¢',
           '–£', '–§', '–•', '–¶', '–ß', '–®', '–©', '–´', '–≠', '–Æ', '–Ø']

LETTERS2 = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',
            'V', 'W', 'X', 'Y', 'Z']

# A
CHORDS_1DSR = ['–õ—è –º–∞–∂–æ—Ä', '–õ—è –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ (–º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥) –æ—Ç –Ω–æ—Ç—ã –õ—è', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è',
               '–õ—è –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è',
               '–õ—è –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–õ—è –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –õ—è', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –õ—è',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è', '–õ—è –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –õ—è',
               '–õ—è –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–õ—è –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']

# A#
CHORDS_2DSR = ['–õ—è-–¥–∏–µ–∑ –º–∞–∂–æ—Ä', '–õ—è-–¥–∏–µ–∑ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ (–º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥) –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑', '–õ—è-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑',
               '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑', '–õ—è-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–õ—è-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑', '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑',
               '–õ—è-–¥–∏–µ–∑ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –õ—è-–¥–∏–µ–∑',
               '–õ—è-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–õ—è-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']

# Bb
CHORDS_3DSR = ['–°–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä', 'C–∏-–±–µ–º–æ–ª—å-–º–∏–Ω–æ—Ä–Ω—ã–π –∞–∫–∫–æ—Ä–¥', 'C–∏-–±–µ–º–æ–ª—å-–¥–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥', 'C–∏-–±–µ–º–æ–ª—å-–º–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥', '–£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏-–±–µ–º–æ–ª—å',
               'C–∏-–±–µ–º–æ–ª—å-—É–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥', 'C–∏-–±–µ–º–æ–ª—å-—É–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥', '–°–∏-–±–µ–º–æ–ª—å-–∞–∫–∫–æ—Ä–¥ —Å –∑–∞–¥–µ—Ä–∂–∞–Ω–Ω–æ–π —Å–µ–∫—É–Ω–¥–æ–π',
               '–°–∏-–±–µ–º–æ–ª—å-–∞–∫–∫–æ—Ä–¥ —Å –∑–∞–¥–µ—Ä–∂–∞–Ω–Ω–æ–π –∫–≤–∞—Ä—Ç–æ–π', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –°–∏-–±–µ–º–æ–ª—å', '–°–∏-–±–µ–º–æ–ª—å-–¥–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∑–∞–¥–µ—Ä–∂–∞–Ω–Ω–æ–π –∫–≤–∞—Ä—Ç–æ–π',
               '–°–∏-–±–µ–º–æ–ª—å-–º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥', '–°–∏-–±–µ–º–æ–ª—å-–º–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥', ' –°–∏-–±–µ–º–æ–ª—å-–¥–æ–º–∏–Ω–∞–Ω—Ç–Ω–æ–Ω–∞–∫–∫–æ—Ä–¥',
               'C–∏-–±–µ–º–æ–ª—å-–º–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥', 'C–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä, –±–æ–ª—å—à–∞—è —Å–µ–ø—Ç–∏–º–∞', 'C–∏-–±–µ–º–æ–ª—å-–º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–∏-–±–µ–º–æ–ª—å',
               '–°–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–°–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']
# B
CHORDS_4DSR = ['–°–∏ –º–∞–∂–æ—Ä', '–°–∏ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–°–∏ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π',
               '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–°–∏ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–°–∏ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –°–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–∏',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–°–∏ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–∏',
               '–°–∏ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–°–∏ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']

# H
CHORDS_5DSR = ['–°–∏ –º–∞–∂–æ—Ä', '–°–∏ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–°–∏ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π',
               '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–°–∏ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–°–∏ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –°–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–∏',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–°–∏ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–∏',
               '–°–∏ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–°–∏ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']


# C
CHORDS_6DSR = ['–î–æ –º–∞–∂–æ—Ä', '–î–æ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ', '–î–æ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π',
               '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ', '–î–æ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–î–æ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –î–æ', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –î–æ',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ', '–î–æ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –î–æ',
               '–î–æ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–î–æ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']

# C#
CHORDS_7DSR = ['–î–æ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä', '–î–æ-–¥–∏–µ–∑ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑',
               '–î–æ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑',
               '–î–æ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–î–æ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑', '–î–æ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –î–æ-–¥–∏–µ–∑','–î–æ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–î–æ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']


# Db
CHORDS_8DSR = ['–î–æ-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä', '–î–æ-–±–µ–º–æ–ª—å-–º–∏–Ω–æ—Ä–Ω—ã–π –∞–∫–∫–æ—Ä–¥', '–î–æ-–±–µ–º–æ–ª—å-–¥–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥', '–î–æ-–±–µ–º–æ–ª—å-–º–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥', '–£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –î–æ-–±–µ–º–æ–ª—å',
               '–î–æ-–±–µ–º–æ–ª—å-—É–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥', '–î–æ-–±–µ–º–æ–ª—å-—É–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥', '–î–æ-–±–µ–º–æ–ª—å-–∞–∫–∫–æ—Ä–¥ —Å –∑–∞–¥–µ—Ä–∂–∞–Ω–Ω–æ–π —Å–µ–∫—É–Ω–¥–æ–π',
               '–î–æ-–±–µ–º–æ–ª—å-–∞–∫–∫–æ—Ä–¥ —Å –∑–∞–¥–µ—Ä–∂–∞–Ω–Ω–æ–π –∫–≤–∞—Ä—Ç–æ–π', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –î–æ-–±–µ–º–æ–ª—å', '–î–æ-–±–µ–º–æ–ª—å-–¥–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∑–∞–¥–µ—Ä–∂–∞–Ω–Ω–æ–π –∫–≤–∞—Ä—Ç–æ–π',
               '–î–æ-–±–µ–º–æ–ª—å-–º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥', '–î–æ-–±–µ–º–æ–ª—å-–º–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥', ' –î–æ-–±–µ–º–æ–ª—å-–¥–æ–º–∏–Ω–∞–Ω—Ç–Ω–æ–Ω–∞–∫–∫–æ—Ä–¥',
               '–î–æ-–±–µ–º–æ–ª—å-–º–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥', '–î–æ-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä, –±–æ–ª—å—à–∞—è —Å–µ–ø—Ç–∏–º–∞', '–î–æ-–±–µ–º–æ–ª—å-–º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –î–æ-–±–µ–º–æ–ª—å',
               '–î–æ-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–î–æ-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']

# D
CHORDS_9DSR = ['–†–µ –º–∞–∂–æ—Ä', '–†–µ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ', '–†–µ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π',
               '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ', '–†–µ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–†–µ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –†–µ', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –†–µ',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ', '–†–µ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –†–µ',
               '–†–µ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–†–µ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']

# D#
CHORDS_10DSR = ['–†–µ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä', '–†–µ-–¥–∏–µ–∑ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑',
               '–†–µ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑',
               '–†–µ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–†–µ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑', '–†–µ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –†–µ-–¥–∏–µ–∑','–†–µ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–†–µ-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']


# Eb
CHORDS_11DSR = ['–ú–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä', '–ú–∏-–±–µ–º–æ–ª—å –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å',
               '–ú–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å',
               '–ú–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–ú–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å', '–ú–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –ú–∏-–±–µ–º–æ–ª—å','–ú–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–ú–∏-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']


# E
CHORDS_12DSR = ['–ú–∏ –º–∞–∂–æ—Ä', '–ú–∏ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏', '–ú–∏ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π',
               '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏', '–ú–∏ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–ú–∏ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –ú–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –ú–∏',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏', '–ú–∏ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –ú–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –ú–∏',
                '–ú–∏ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–ú–∏ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']


# F
CHORDS_13DSR = ['–§–∞ –º–∞–∂–æ—Ä', '–§–∞ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞', '–§–∞ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π',
               '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞', '–§–∞ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–§–∞ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –§–∞', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –§–∞',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞', '–§–∞ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –§–∞',
                '–§–∞ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–§–∞ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']

# F#
CHORDS_14DSR = ['–§–∞-–¥–∏–µ–∑ –º–∞–∂–æ—Ä', '–§–∞-–¥–∏–µ–∑ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑',
                '–§–∞-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑',
                '–§–∞-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–§–∞-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
                '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑',
                '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑',
                '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑', '–§–∞-–¥–∏–µ–∑ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑',
                '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –§–∞-–¥–∏–µ–∑','–§–∞-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–§–∞-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']

# Gb 15
CHORDS_15DSR = ['–°–æ–ª—å-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä', '–°–æ–ª—å-–±–µ–º–æ–ª—å –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å',
               '–°–æ–ª—å-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å',
               '–°–æ–ª—å-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–°–æ–ª—å-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å', '–°–æ–ª—å-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–±–µ–º–æ–ª—å','–°–æ–ª—å-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–°–æ–ª—å-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']


# G
CHORDS_16DSR = ['–°–æ–ª—å –º–∞–∂–æ—Ä', '–°–æ–ª—å –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å', '–°–æ–ª—å –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π',
                '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å', '–°–æ–ª—å –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
                '–°–æ–ª—å –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å',
                '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å',
                '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å', '–°–æ–ª—å –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å',
                '–°–æ–ª—å –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–°–æ–ª—å –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']

# G#
CHORDS_17DSR = ['–°–æ–ª—å-–¥–∏–µ–∑ –º–∞–∂–æ—Ä', '–°–æ–ª—å-–¥–∏–µ–∑ –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑',
                '–°–æ–ª—å-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑',
                '–°–æ–ª—å-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–°–æ–ª—å-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
                '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑',
                '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑',
                '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑', '–°–æ–ª—å-–¥–∏–µ–∑ –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑',
                '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –°–æ–ª—å-–¥–∏–µ–∑','–°–æ–ª—å-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–°–æ–ª—å-–¥–∏–µ–∑ –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']

# Ab 18
CHORDS_18DSR = ['–õ—è-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä', '–õ—è-–±–µ–º–æ–ª—å –º–∏–Ω–æ—Ä', '–î–æ–º–∏–Ω–∞–Ω—Ç—Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å',
               '–õ—è-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π –∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å', '–£–º–µ–Ω—å—à–µ–Ω–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å',
               '–õ—è-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏', '–õ—è-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –∫–≤–∞—Ä—Ç–æ–π –≤–º–µ—Å—Ç–æ —Ç–µ—Ä—Ü–∏–∏',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –±–æ–ª—å—à–æ–π —Å–µ–∫—É–Ω–¥–æ–π –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å', '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å –∫–≤–∞—Ä—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å', '–ú–∏–Ω–æ—Ä–Ω—ã–π —Å–µ–∫—Å—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å', '–ú–∞–∂–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å',
               '–ú–∏–Ω–æ—Ä–Ω—ã–π –Ω–æ–Ω–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å', '–õ—è-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä', '–ë–æ–ª—å—à–æ–π –º–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å',
               '–ú–∞–∂–æ—Ä–Ω—ã–π —Å–µ–ø—Ç–∞–∫–∫–æ—Ä–¥ —Å —Å–µ–∫—Å—Ç–æ–π –æ—Ç –Ω–æ—Ç—ã –õ—è-–±–µ–º–æ–ª—å','–õ—è-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å —É–º–µ–Ω—å—à–µ–Ω–Ω–æ–π –∫–≤–∏–Ω—Ç–æ–π','–õ—è-–±–µ–º–æ–ª—å –º–∞–∂–æ—Ä —Å –±–æ–ª—å—à–æ–π –Ω–æ–Ω–æ–π']


CHORDS_TYPE_NAME_LIST_DSR = [CHORDS_1DSR, CHORDS_2DSR, CHORDS_3DSR, CHORDS_4DSR, CHORDS_5DSR, CHORDS_6DSR, CHORDS_7DSR,
CHORDS_8DSR, CHORDS_9DSR, CHORDS_10DSR, CHORDS_11DSR, CHORDS_12DSR, CHORDS_13DSR,CHORDS_14DSR,CHORDS_15DSR,
                             CHORDS_16DSR,CHORDS_17DSR,CHORDS_18DSR]


TR_TYPE_1_B = ['A', 'A#', 'B', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']
TR_TYPE_2_B = ['A', 'Bb', 'B', 'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab']

TR_TYPE_1_H = ['A', 'A#', 'H', 'C', 'C#', 'D', 'D#', 'E', 'F', 'F#', 'G', 'G#']
TR_TYPE_2_H = ['A', 'Bb', 'H', 'C', 'Db', 'D', 'Eb', 'E', 'F', 'Gb', 'G', 'Ab']


def trans_chord(chord_type, ton:int = 0, b = 0 , h = 0 ):
    if len(chord_type) > 1:
        if chord_type[1] != 'b' and chord_type[1] != '#':
            chord = chord_type[0]
            chord_syf = chord_type.replace(chord,'')
        else:
            chord = chord_type[0] + chord_type[1]
            chord_syf = chord_type.replace(chord,'')
    else:
        chord = chord_type[0]
        chord_syf = ''

    # –µ—Å–ª–∏ –≤ –ø–µ—Å–Ω–µ –Ω–µ—Ç h –∏ b
    if h == 0 and b == 0:
        index = TR_TYPE_1_B.index(chord)
        if ton == 1:
            if index + 1 == len(TR_TYPE_1_B):
                tr_chord = TR_TYPE_1_B[0] + chord_syf
                return tr_chord
            else:
                tr_chord = TR_TYPE_1_B[index + 1] + chord_syf
                return tr_chord
        else:
            if index - 1 < 0:
                tr_chord = TR_TYPE_1_B[-1] + chord_syf
                return tr_chord
            else:
                tr_chord = TR_TYPE_1_B[index - 1] + chord_syf
                return tr_chord

    # —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä—É–µ–º –ø–æ —Ç—Ä–µ—Ç—å–µ–º—É —Å–ø–∏—Å–∫—É c H –±–µ–∑ –±–µ–º–æ–ª–µ–π
    elif h == 1 and b == 0:
        index = TR_TYPE_1_H.index(chord)
        if ton == 1:
            if index + 1 == len(TR_TYPE_1_H):
                tr_chord = TR_TYPE_1_H[0] + chord_syf
                return tr_chord
            else:
                tr_chord = TR_TYPE_1_H[index + 1] + chord_syf
                return tr_chord
        else:
            if index - 1 < 0:
                tr_chord = TR_TYPE_1_H[-1] + chord_syf
                return tr_chord
            else:
                tr_chord = TR_TYPE_1_H[index - 1] + chord_syf
                return tr_chord

    # —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä—É–µ–º –ø–æ –≤—Ç–æ—Ä–æ–º—É —Å–ø–∏—Å–∫—É —Å –±–µ–∑ h c –±–µ–º–æ–ª–µ–º
    elif h == 0 and b == 1:
        index = TR_TYPE_2_B.index(chord)
        if ton == 1:
            if index + 1 == len(TR_TYPE_2_B):
                tr_chord = TR_TYPE_2_B[0] + chord_syf
                return tr_chord
            else:
                tr_chord = TR_TYPE_2_B[index + 1] + chord_syf
                return tr_chord
        else:
            if index - 1 < 0:
                tr_chord = TR_TYPE_2_B[-1] + chord_syf
                return tr_chord
            else:
                tr_chord = TR_TYPE_2_B[index - 1] + chord_syf
                return tr_chord


    # —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä—É–µ–º –ø–æ –≤—Ç–æ—Ä–æ–º—É —Å–ø–∏—Å–∫—É —Å –±–µ–º–æ–ª—è–º–∏ (—Å–ª–∏ –≤ –∫–æ–º–ø–æ–∑–∏—Ü–∏–∏ –µ—Å—Ç—å –±–µ–º–æ–ª—å)
    elif h == 1 and b == 1:
        index = TR_TYPE_2_H.index(chord)
        if ton == 1:
            if index + 1 == len(TR_TYPE_2_H):
                tr_chord = TR_TYPE_2_H[0] + chord_syf
                return tr_chord
            else:
                tr_chord = TR_TYPE_2_H[index + 1] + chord_syf
                return tr_chord
        else:
            if index - 1 < 0:
                tr_chord = TR_TYPE_2_H[-1] + chord_syf
                return tr_chord
            else:
                tr_chord = TR_TYPE_2_H[index - 1] + chord_syf
                return tr_chord

########################################################################################################################
# —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
def transponire_song(song_link, ton,user):
    def find_all_chords(text):
        """–ù–∞—Ö–æ–¥–∏—Ç –≤—Å–µ –∞–∫–∫–æ—Ä–¥—ã –≤ —Ç–µ–∫—Å—Ç–µ –ø–æ —Å–ø–∏—Å–∫–∞–º."""
        chords_found = set()
        for word in text.split():
            if (word in CHORDS_1 or word in CHORDS_2 or word in CHORDS_3 or word in CHORDS_4 or word in CHORDS_5
                    or word in CHORDS_6 or word in CHORDS_7 or word in CHORDS_8 or word in CHORDS_9 or word in CHORDS_10
                    or word in CHORDS_11 or word in CHORDS_12 or word in CHORDS_13 or word in CHORDS_14 or word in CHORDS_15
                    or word in CHORDS_16 or word in CHORDS_17 or word in CHORDS_18):
                chords_found.add(word)
        return list(chords_found)

    def replace_chords_in_text(text, chord_map):
        def replacer(match):
            chord = match.group(0)
            return chord_map.get(chord, chord)

        pattern = r'(' + '|'.join(re.escape(c) for c in chord_map.keys()) + r')'
        return re.sub(pattern, replacer, text)

    def replace_markdown_symbols(text):
        replacements = {
            '*': '‚®â',
            '_': '‚éØ',
            '[': 'Ôºª',
            ']': 'ÔºΩ',
            '(': 'Ôºà',
            ')': 'Ôºâ',
            '`': 'ÔΩÄ',
            '{': 'ÔΩõ',
            '}': 'ÔΩù',
            '+': 'Ôºã',
            '-': 'Ôºç',
            '!': 'ÔºÅ',
            '|': 'ÔΩú',
            '>': 'Ôºû'
        }
        for symbol, replacement in replacements.items():
            text = text.replace(symbol, replacement)
        return text

    def get_transpose_params(chord):
        if any(n in chord for n in ['Ab', 'Bb', 'Db', 'Eb', 'Gb']):
            return {'b': 1, 'h': 0}
        elif chord in CHORDS_5:
            return {'b': 0, 'h': 1}
        else:
            return {'b': 0, 'h': 0}

    # –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞:
    with open(song_link, 'r', encoding='utf-8-sig') as f:
        lines = f.readlines()

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–µ—Ä–≤—ã—Ö –¥–≤—É—Ö —Å—Ç—Ä–æ–∫
    if len(lines) >= 3:
        lines[0] = f"üé∏ *{lines[0].strip()}*ü§òüé∂üòé\n"
        lines[2] = f"üéµ _{lines[2].strip()}_\n"
        print(f'–¢–µ–∫—É—â–∏–µ –∞–∫–∫–æ—Ä–¥—ã: {lines[2]}')

    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤–µ—Å—å —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –∞–∫–∫–æ—Ä–¥–æ–≤
    full_text = ''.join(lines)

    # –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –∞–∫–∫–æ—Ä–¥—ã –≤ —Ç–µ–∫—Å—Ç–µ
    all_chords = find_all_chords(full_text)
    print(f'–Ω–∞–π–¥–µ–Ω—ã{all_chords}')

    # –¢–µ–ø–µ—Ä—å –ø—Ä–∏–º–µ–Ω—è–µ–º —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞–∫–∫–æ—Ä–¥–∞ —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
    chord_map = {}
    for ch in all_chords:
        params = get_transpose_params(ch)
        b = params['b']
        h = params['h']

        trans_ch = ch
        if ton > 0:
            for _ in range(ton):
                trans_ch = trans_chord(trans_ch, 1, b, h)
                # print(f'{ch} —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω –≤ —Ç–µ–∫—Å—Ç–µ {trans_ch}')
        elif ton < 0:
            for _ in range(-ton):
                trans_ch = trans_chord(trans_ch, -1, b, h)
                # print(f'{ch} —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω –≤ —Ç–µ–∫—Å—Ç–µ {trans_ch}')

        chord_map[ch] = trans_ch

    # –ü–µ—Ä–µ–¥ –∑–∞–º–µ–Ω–æ–π —Ç—Ä–µ—Ç—å–µ–π —Å—Ç—Ä–æ–∫–∏ ‚Äî –∑–∞–º–µ–Ω—è–µ–º —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª—ã –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–æ–∫–∞—Ö (–∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–π –∏ —Ç—Ä–µ—Ç—å–µ–π)
    for i in range(len(lines)):
        if i != 0 and i != 2:
            lines[i] = replace_markdown_symbols(lines[i])

    # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∞–∫–∫–æ—Ä–¥—ã –≤ –ø–æ–ª–Ω–æ–º —Ç–µ–∫—Å—Ç–µ –Ω–∞ —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ
    full_text_transposed = replace_chords_in_text(full_text, chord_map)
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç—Ä–æ–∫–∏ —Å —É—á–µ—Ç–æ–º –∑–∞–º–µ–Ω—ã –∞–∫–∫–æ—Ä–¥–æ–≤
    for i in range(len(lines)):
        lines[i] = replace_chords_in_text(lines[i], chord_map)
    # –ó–∞–º–µ–Ω—è–µ–º —Ç—Ä–µ—Ç—å—é —Å—Ç—Ä–æ–∫—É –Ω–∞ —Å–ª–æ–≤–æ "–ê–∫–∫–æ—Ä–¥—ã" –∏ —Å–ø–∏—Å–æ–∫
    sorted_chords = sorted(set(chord_map.values()))
    lines[2] = f"üéµ _–ê–∫–∫–æ—Ä–¥—ã({','.join(sorted_chords)})_\n"

    if PARTNER_LINK:
        lines.append(replace_markdown_symbols(f'\n\n'))
        lines.append(PARTNER_LINK)


    # –ò—Ç–æ–≥–æ–≤—ã–π —Ç–µ–∫—Å—Ç
    file_link = ''.join(lines)

    return file_link, ','.join(sorted_chords)

# —Å—Ç—Ä–æ–∫–∞ –¥–æ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–æ–±–µ–ª–∞
def get_substring(s, max_length=25):
    # –ï—Å–ª–∏ –¥–ª–∏–Ω–∞ —Å—Ç—Ä–æ–∫–∏ –º–µ–Ω—å—à–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ max_length, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—Å—é —Å—Ç—Ä–æ–∫—É
    if len(s) <= max_length:
        return s

    # –û–±—Ä–µ–∑–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–æ max_length
    truncated = s[:max_length]

    # –ò—â–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ–±–µ–ª –≤ –æ–±—Ä–µ–∑–∞–Ω–Ω–æ–π —á–∞—Å—Ç–∏
    last_space = truncated.rfind(' ')

    # –ï—Å–ª–∏ –µ—Å—Ç—å –ø—Ä–æ–±–µ–ª, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—Ç—Ä–æ–∫—É –¥–æ –Ω–µ–≥–æ
    if last_space != -1:
        return truncated[:last_space]
    else:
        # –ï—Å–ª–∏ –ø—Ä–æ–±–µ–ª–æ–≤ –Ω–µ—Ç, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—Ä–µ–∑–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –ø–æ–ª–Ω–æ—Å—Ç—å—é
        return truncated


# –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ —Ç–æ–ø–æ–≤
def escape_markdown_v2(text):
    special_chars = r'\_*[]()~`>#+-=|{}.!'
    for char in special_chars:
        text = text.replace(char, '\\' + char)
    return text

def escape_markdown(text):
    special_chars = r'\_*[]()~`>#+-=|{}.!'
    for char in special_chars:
        text = text.replace(char, '\\' + char)
    return text

def format_top_songs_for_telegram(songs_list,text,type: int = 0):
    message_lines = []
    numbers = ['ü•á','ü•à','ü•â','4Ô∏è‚É£','5Ô∏è‚É£','6Ô∏è‚É£','7Ô∏è‚É£','8Ô∏è‚É£','9Ô∏è‚É£','üîü',]
    for name, views in songs_list:
        index = songs_list.index([name, views])
        idx = numbers[index]
        if len(name) > 30:
            safe_name = escape_markdown_v2(name[:30] + '...')
        else:
            safe_name = escape_markdown_v2(name)


        message_lines.append(f"{idx} *{safe_name}*")
        if views == 1:
            if type == 0:
                message_lines.append(" ".ljust(6, ' ') + f"{views} üëÅÔ∏è _–ø—Ä–æ—Å–º–æ—Ç—Ä_\n")
            elif type == 1:
                message_lines.append(" ".ljust(6, ' ') + f"{views} ‚≠ê _–ø–µ—Å–Ω—è_\n")
        elif views in [2,3,4]:
            if type == 0:
                message_lines.append(" ".ljust(6, ' ') + f"{views} üëÅÔ∏è _–ø—Ä–æ—Å–º–æ—Ç—Ä–∞_\n")
            elif type == 1:
                message_lines.append(" ".ljust(6, ' ') + f"{views} ‚≠ê _–ø–µ—Å–Ω–∏_\n")
        else:
            if type == 0:
                message_lines.append(" ".ljust(6, ' ') + f"{views} üëÅÔ∏è _–ø—Ä–æ—Å–º–æ—Ç—Ä–æ–≤_\n")
            elif type == 1:
                message_lines.append(" ".ljust(6, ' ') + f"{views} ‚≠ê _–ø–µ—Å–µ–Ω_\n")

    return f"*–¢–û–ü10 {text}*\n\n" + "\n".join(message_lines)

# –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–µ—Å–µ–Ω –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é
def group_songs(songs):
    grouped = {}
    for song in songs:
        # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–æ –ø–µ—Ä–≤–æ–º—É –Ω–∏–∂–Ω–µ–º—É –ø–æ–¥—á–µ—Ä–∫–∏–≤–∞–Ω–∏—é
        if '_' in song:
            base_name = song.split('_')[0]
        else:
            base_name = song
        # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É –∏ –∑–∞–º–µ–Ω—è–µ–º '—ë' –Ω–∞ '–µ'
        base_name_processed = base_name.lower().replace('—ë', '–µ')
        # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Å–Ω—é –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –≥—Ä—É–ø–ø—É
        if base_name_processed not in grouped:
            grouped[base_name_processed] = []
        grouped[base_name_processed].append(song)
    return list(grouped.values())


# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä —Ç–∞–π–º–µ—Ä –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π

# –¥–µ–∫–æ—Ä–∞—Ç–æ—Ä –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π
def measure_time(func):
    @wraps(func)
    def wrapper(*args, **kwargs):
        start_time = time.time()
        result = func(*args, **kwargs)
        end_time = time.time()
        elapsed_time = end_time - start_time
        hours = int(elapsed_time // 3600)
        minutes = int((elapsed_time % 3600) // 60)
        seconds = int(elapsed_time % 60)
        print(f"‚è± –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {hours:02d}:{minutes:02d}:{seconds:02d}")
        return result
    return wrapper


# –ø–æ–∏—Å–∫ –∏–¥–µ–Ω—Ç–∏—á–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ
def get_files_in_folder(initial_file_path):
    # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    initial_file_abs = os.path.abspath(initial_file_path)
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É —Ñ–∞–π–ª–∞
    folder_path = os.path.dirname(initial_file_abs)

    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫–µ
    all_files = []
    for filename in os.listdir(folder_path):
        full_path = os.path.join(folder_path, filename)
        if os.path.isfile(full_path):
            all_files.append(full_path)

    # –§–∏–ª—å—Ç—Ä—É–µ–º –ø–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º
    extensions = ['.jpg', '.png']
    filtered_files = [f for f in all_files if os.path.splitext(f)[1].lower() in extensions]

    # –í–∫–ª—é—á–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π —Ñ–∞–π–ª –ø–µ—Ä–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
    if initial_file_abs not in filtered_files:
        filtered_files.insert(0, initial_file_abs)
    else:
        filtered_files.remove(initial_file_abs)
        filtered_files.insert(0, initial_file_abs)

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —á–∏—Å–ª–∞ –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
    def extract_number(file_path):
        filename = os.path.basename(file_path)
        match = re.search(r'_(\d+)', filename)
        if match:
            return int(match.group(1))
        else:
            return -1  # —Ñ–∞–π–ª—ã –±–µ–∑ —Å—É—Ñ—Ñ–∏–∫—Å–∞ –∏–¥—É—Ç –≤ –Ω–∞—á–∞–ª–æ –ø—Ä–∏ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø–æ —á–∏—Å–ª–æ–≤–æ–º—É —Å—É—Ñ—Ñ–∏–∫—Å—É, –ø—Ä–∏ —ç—Ç–æ–º —Ñ–∞–π–ª—ã –±–µ–∑ —Å—É—Ñ—Ñ–∏–∫—Å–∞ –ø–æ–ª—É—á–∞—Ç -1 –∏ –±—É–¥—É—Ç –≤ –Ω–∞—á–∞–ª–µ
    sorted_files = sorted(filtered_files, key=extract_number)
    print(sorted_files)
    return sorted_files


def replace_markdown_symbols(text):
    replacements = {
        '*': '‚®â',
        '_': '‚éØ',
        '[': 'Ôºª',
        ']': 'ÔºΩ',
        '(': 'Ôºà',
        ')': 'Ôºâ',
        '`': 'ÔΩÄ',
        '{': 'ÔΩõ',
        '}': 'ÔΩù',
        '+': 'Ôºã',
        '-': 'Ôºç',
        '!': 'ÔºÅ',
        '|': 'ÔΩú',
        '>': 'Ôºû'
    }
    for symbol, replacement in replacements.items():
        text = text.replace(symbol, replacement)
    return text


# —Ä–∞–∑–±–∏–≤–∫–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
def split_text(text, max_length=4000):
    """
    –†–∞–∑–±–∏–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞ —á–∞—Å—Ç–∏ –Ω–µ –¥–ª–∏–Ω–Ω–µ–µ max_length —Å–∏–º–≤–æ–ª–æ–≤.
    –†–∞–∑–±–∏–µ–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ –ø–µ—Ä–µ–Ω–æ—Å–∞–º —Å—Ç—Ä–æ–∫ (\n), —á—Ç–æ–±—ã –Ω–µ —Ä–µ–∑–∞—Ç—å —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ.

    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫.
    """
    lines = text.split('\n')
    parts = []
    current_part = []

    current_length = 0
    for line in lines:
        # +1 –¥–ª—è —É—á—ë—Ç–∞ —Å–∏–º–≤–æ–ª–∞ –ø–µ—Ä–µ–Ω–æ—Å–∞ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –æ–±—Ä–∞—Ç–Ω–æ
        line_length = len(line) + 1

        if current_length + line_length > max_length:
            # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∞—è —á–∞—Å—Ç—å –Ω–µ –ø—É—Å—Ç–∞—è, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            if current_part:
                parts.append('\n'.join(current_part))
                current_part = []
                current_length = 0

            # –ï—Å–ª–∏ –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞ –¥–ª–∏–Ω–Ω–µ–µ max_length, –Ω—É–∂–Ω–æ –µ—ë —Ä–∞–∑–±–∏—Ç—å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
            if line_length > max_length:
                # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É –Ω–∞ –∫—É—Å–∫–∏ –ø–æ max_length
                for i in range(0, len(line), max_length):
                    parts.append(line[i:i + max_length])
            else:
                current_part.append(line)
                current_length = line_length
        else:
            current_part.append(line)
            current_length += line_length

    # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —á–∞—Å—Ç—å
    if current_part:
        parts.append('\n'.join(current_part))

    return parts

if __name__ == "__main__":
    print(DBNAME)






